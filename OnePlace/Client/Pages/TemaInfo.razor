@page "/temainfoextra/{TemaId:int}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IMostrarMensaje mostrarMensajes
@inject IJSRuntime JS
@*todas las paginas necesitan este atributo para que no se puedan ver sino estas logueado*@
@attribute [Authorize]
@using System.Security.Claims

@if (user.IsInRole("Usuario"))
{
    <div class="container-landingpage bg-white p-0 text-heebo">

        <!-- Navbar & Hero Start -->
        <div class="container-xxl position-relative p-0">
            <nav class="navbar navbar-expand-lg navbar-light px-4 px-lg-5 py-3 py-lg-0">
                <a href="inicio" class="navbar-brand p-0">
                    <!--<h1 class="m-0"><i class="fa fa-search me-2"></i>SEO<span class="fs-5">Master</span></h1> -->
                    <img src="img/oneplace.png" alt="Logo">
                </a>
                <button class="navbar-toggler" type="button" @onclick="ToggleNavMenu">
                    <span class="fa fa-bars"></span>
                </button>
                <div class="@NavMenuCssClass navbar-collapse" id="navbarCollapse" @onclick="CollapseNavMenu">
                    <div class="navbar-nav ml-auto py-0">
                        @*cambio ocurrido plantilla en boostrap 5 ms-auto blazor boostrap 4 ml-auto*@
                        <a onclick="document.getElementById('inicio').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Inicio</a>
                        <a onclick="document.getElementById('temas').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Temas</a>
                        <a onclick="document.getElementById('contacto').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Contacto</a>
                    </div>
                </div>
                <EnlacesLogin ColorDropDown="btn btn-simsasecondary btn-sm ml-2 dropdown-caret-none" />
            </nav>

            <div class="container-xxl py-5 bg-simsa hero-header mb-5" id="inicio">
                <div class="container my-5 py-5 px-lg-5">
                    <div class="row g-5 py-5">
                        <div class="col-lg-6 text-center text-lg-start">
                            <h1 class="text-white mb-4 animated zoomIn">Gracias por ser parte de la familia Simsa</h1>
                            <p class="text-white pb-3 animated zoomIn">Bienvenido a tu Portal Web</p>
                            @if (TemaQuizDTO != null)
                            {
                                <a href="cursoinfoextra/@TemaQuizDTO.Tema.CursoId" class="btn btn-light py-sm-3 px-sm-5 rounded-pill me-3 animated slideInLeft font-weight-bold">Regresar al Curso</a>
                            }
                            <!--<a href="" class="btn btn-outline-light py-sm-3 px-sm-5 rounded-pill animated slideInRight">Contact Us</a> -->
                        </div>
                        <div class="col-lg-6 text-center text-lg-start">
                            <img class="img-fluid animated flipInX" src="img/oneplace2.png" alt="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Navbar & Hero End -->
        <!--Temas-->

        <div class="container-xxl py-5" id="temas">
            <div class="container px-lg-5">
                <div class="row g-5">
                    <div class="col-lg-12 wow fadeInUp" data-wow-delay="0.1s" data-wow-iteration="1" style="visibility: visible; animation-delay: 0.1s; animation-name: fadeInUp;">
                        <div class="section-title position-relative mb-4 pb-2">
                            <h6 class="position-relative text-primarysimsa pl-4">Temas</h6>
                            <h2 class="mt-2">Aumenta tu perfil profesional</h2>
                        </div>
                        @if (TemaQuizDTO == null)
                        {
                            <LoadingSpinner IsLoading="Procesando" />
                        }
                        else
                        {
                            <div class="card card-timeline px-2 border-none mb-3">
                                <ul class="bs4-order-tracking">
                                    @*
                            1-Recorre la lista de fases para dibujar los <li>.
                            2-Despues Recorre la lista de actividades, coparando contra la lista de fases por su fasecursoid,
                            y donde encuentre una actividad marcada como completa, almacenara el valor en una variable llamada fasecompleta,
                            que a su vez se pasa al class de los <li> para asi poder actualizar el css que pintara el <li> de color.
                            3-Los <li> no estan dentro del foreach del listado de actividades ya que dicho listado puede traer solo un objeto
                            y por lo tanto solo se dibujaria en pantalla un <li>, por eso se realiza en el foreach de listado de fases ya que
                            asi se dibujaran todos los <li> por cada fase que exista en la bd.
                            4-La compraracion por fasecursoid se hace en el where, ya que si solo se recorre el listado de actividades
                            y luego en un if se hace la compracion, se dibujaran mas <li> de los que vienen de la bd por que se estaran recorrriendo
                            dos foreach, por eso es mejor filtrar la lista antes de recorrerla.
                            5-Si la variable FaseCompleta se pone de manera global no se actualizan los colores,
                            necesitarias un statehaschanged, pero si lo pones se queda ciclado
                            6-Con el componente Lista ListaItem no se actualizan las variables globales,
                            por eso mejor se quito y se uso un <ul><li> puro de html.
                            *@
                                    @foreach (var faseitem in TemaFaseDTO.ListadodeFases)
                                    {
                                        bool FaseCompleta = false;
                                        @foreach (var actividad in TemaFaseDTO.ListadeActividades.Where(x => x.FaseCursoId == faseitem.FaseCursoId))
                                        {
                                            FaseCompleta = actividad.IsComplete;
                                        }

                                        @if (FaseCompleta == true)
                                        {
                                            MostrarBotonQuiz = true;
                                            <li class="step active">
                                                <div>
                                                    <i class="@faseitem.Icono" />
                                                </div>
                                                @faseitem.FaseNombre
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="step">
                                                <div>
                                                    <i class="@faseitem.Icono" />
                                                </div>
                                                @faseitem.FaseNombre
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>

                            <Card Class="card mb-3">
                                <CardBody Class="card-body">
                                    <div class="row">
                                        <div class="col-lg-6 mb-4 mb-lg-0">
                                            <div class="position-relative contenedordelaimg">
                                                <Imagen Class="rounded-1 h-100 w-100" Src="@TemaQuizDTO.Tema.Imagen" />
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <Texto Typo="Typo.h5">@TemaQuizDTO.Tema.Nombre</Texto>
                                            <Texto Typo="Typo.body1" Class="fs--1">@TemaQuizDTO.Tema.FechaRegistro.Value.ToString("dddd, dd MMMM yyyy")</Texto>
                                            <Texto Typo="Typo.body1" Class="fs--1" Style="text-align:justify">
                                                @TemaQuizDTO.Tema.Descripcion
                                            </Texto>
                                            @if (TemaQuizDTO.Tema.ArchivoId > 0)
                                            {
                                                <Texto Typo="Typo.body1" Class="fs--1">
                                                    Acciones para pdf:&nbsp;
                                                    <BotonIcono Class="btn p-0 ms-2" ButtonType="ButtonType.Button" data-bs-toggle="tooltip" data-bs-placement="top" title="Ver" Icon="text-500 fas fa-eye" @onclick="()=>MostrarPdf(TemaQuizDTO.Tema.ArchivoId)" />&nbsp;
                                                </Texto>
                                            }
                                            @if (TemaQuizDTO.Tema.Activo == true)
                                            {
                                                <Texto Typo="Typo.body1" Class="fs--1">Estado:&nbsp;<Texto Typo="Typo.strong" Class="text-success">Activo</Texto></Texto>
                                            }

                                            @*si la fase de video fue terminada se activa el mostrarbotonquiz*@
                                            @if (MostrarBotonQuiz == true || TemaQuizDTO.Tema.VideoId == 0)
                                            {
                                                //si el quiz ya fue terminado aparece este boton, sino el boton de responder
                                                if (TemaFaseDTO != null && TemaFaseDTO.EstadosdelQuiz.EstadoQuiz == EstadoQuiz.Terminado)
                                                {
                                                    <Enlace Class="btn btn-warning btn-sm" Href="@("quizinfoextra/" + TemaQuizDTO.Quiz.QuizId)">
                                                        <Icono Icon="fas fa-check-circle" />
                                                        Ver Resultados
                                                    </Enlace>
                                                }
                                                else
                                                {
                                                    if (TemaQuizDTO.Quiz is not null && TemaQuizDTO.Quiz.QuizId != 0)
                                                    {
                                                        <Enlace Class="btn btn-dark btn-sm" Href="@("quizinfoextra/" + TemaQuizDTO.Quiz.QuizId)">
                                                            <Icono Icon="oi oi-pencil" />
                                                            Responder Cuestionario
                                                        </Enlace>
                                                    }

                                                }
                                            }


                                        </div>
                                    </div>
                                </CardBody>
                            </Card>

                            @if (ArchivoAdjunto != null && TemaQuizDTO.Tema.VideoId > 0)
                            {
                                <Card Class="card mb-3">
                                    <CardBody Class="card-body bg-light">
                                        <div class="form-row">
                                            <div class="col-sm-2"></div>
                                            <div class="col-sm-8">
                                                <Card Class="card overflow-hidden">
                                                    <Card Class="card-img-top">
                                                        <video id="myVideo" controls width="100%" controlslist="nodownload">
                                                            <source src="@ArchivoAdjunto.UrlLocal" type="video/mp4" />
                                                        </video>
                                                    </Card>
                                                    <CardBody Class="card-body">
                                                        <Texto Typo="Typo.body2" Class="card-title">@TemaQuizDTO.Tema.DescripcionVideo</Texto>
                                                    </CardBody>
                                                </Card>
                                            </div>
                                            <div class="col-sm-2"></div>
                                        </div>
                                    </CardBody>
                                </Card>
                                <br />
                            }

                            @if (VerPdf)
                            {
                                <div class="modal show" id="authentication-modal" tabindex="-1" role="dialog" aria-labelledby="authentication-modal-label" aria-modal="true" style="display:block; padding-left: 0px;">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content" style="background-color: rgba(10,10,10,.8); border: none;">
                                            <div class="modal-header border-0">
                                                <button type="button" class="btn bg-simsa" data-bs-dismiss="modal" aria-label="Close"
                                                        style="margin: -0.5rem -0.5rem -0.5rem auto;" @onclick="closeModalPdf">
                                                    <span class="fas fa-times" aria-hidden="true"></span>
                                                </button>
                                            </div>
                                            <div class="modal-body">

                                                <div class="row light">
                                                    <div class="col-sm-6 col-lg-3 mb-3"></div>
                                                    <div class="col-sm-6 col-lg-6 mb-3">
                                                        <iframe id="myFrame" src="@("api/Upload/Mostrarpdf/"+Id+"#toolbar=0")" style="width:100%; height:500px;"></iframe>
                                                    </div>
                                                    <div class="col-sm-6 col-lg-3 mb-3"></div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <!--Temas End-->
        <!-- Footer Start -->
        <div class="container-fluid bg-simsa text-dark footer mt-5 pt-5  colornegro wow fadeIn" data-wow-delay="0.1s" id="contacto">
            <div class="container px-lg-5">
                <div class="copyright">
                    <div class="row">
                        <div class="col-md-6 col-lg-5">
                            <p>
                                <i class="fa fa-map-marker-alt mr-3 text-white"></i>C. Juan F. Brittingham, Cd Industrial, Torreón, Coah.
                            </p>
                            <p><i class="fa fa-phone-alt mr-3 text-white"></i>871 750 7171</p>
                            <p><i class="fa fa-envelope mr-3 text-white"></i>contacto@simsa.com</p>
                        </div>
                        <div class="col-md-3 text-center text-md-start mb-3 mb-md-0">
                            &copy; <span class="border-bottom">One Place</span>, All Right Reserved.<br />
                            Designed By <span class="border-bottom">Innovación</span>
                            <br>Distributed By: <span class="border-bottom">Simsa</span>
                        </div>
                        <div class="col-md-3 text-center text-md-end">
                            <div class="d-flex pt-2">
                                <a class="btn btn-outline-light btn-social" href="https://twitter.com/grupo_simsa" target="_blank"><i class="fab fa-twitter"></i></a>
                                <a class="btn btn-outline-light btn-social" href="https://es-la.facebook.com/GrupoSimsaMexico/" target="_blank"><i class="fab fa-facebook-f"></i></a>
                                <a class="btn btn-outline-light btn-social" href="https://www.instagram.com/migasolina/?hl=es" target="_blank"><i class="fab fa-instagram"></i></a>
                                <a class="btn btn-outline-light btn-social" href="https://www.linkedin.com/company/grupo-simsa-s-a-de-c-v-/" target="_blank"><i class="fab fa-linkedin-in"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End -->
        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-lg-square btn-dark back-to-top pt-2"><i class="fas fa-long-arrow-alt-up"></i></a>
    </div>
}

@code {

    ClaimsPrincipal user;
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    [CascadingParameter] public App MyApp { get; set; }

    [Parameter] public int TemaId { get; set; }
    private bool Procesando = true;
    private TemaQuizDTO TemaQuizDTO;
    private string UserId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            UserId = ($"{user.FindFirst(x => x.Type == ClaimTypes.NameIdentifier)?.Value}");
        }

        if (user.IsInRole("Usuario"))
        {
            //cambiar el diseño dependiendo del rol del usuario logueado
            MyApp.SetLayout(typeof(UserLayout));
            await JS.InvokeVoidAsync("loadCss", "css/Landingpagestyle.css");
            StateHasChanged();

            //esto se puso para desactivar el clic derecho en toda la pagina
            await JS.InvokeVoidAsync("BloquearBotonDerecho");
            StateHasChanged();

            await Cargar();

            if (TemaQuizDTO.Tema.VideoId > 0)
            {
                await MostrarVideo(TemaQuizDTO.Tema.VideoId);
            }

            await ObtenerFases();
        }
        else
        {
            MyApp.SetLayout(typeof(MainLayout));
        }
    }

    private async Task Cargar()
    {
        var responseHttp = await repositorio.Get<TemaQuizDTO>($"api/Tema/{TemaId}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("inicio");
            }
            else
            {
                var mensajeError = await responseHttp.GetBody();
                await mostrarMensajes.MostrarMensajeError(mensajeError);
            }
        }
        else
        {
            TemaQuizDTO = responseHttp.Response;
            Procesando = false;
        }
    }

    #region VisualizarPdf

    private Boolean VerPdf = false;
    private int Id;

    public async Task MostrarPdf(int id)
    {
        Id = id;
        VerPdf = true;
    }

    private void closeModalPdf()
    {
        VerPdf = false;
    }

    #endregion

    #region VisualizarVideo

    private int IdVideo;
    private ArchivoAdjunto ArchivoAdjunto;

    public async Task MostrarVideo(int id)
    {
        IdVideo = id;

        var responseHttp = await repositorio.Get<ArchivoAdjunto>($"api/Upload/{IdVideo}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                //al borrar un video hay un error por que este metodo requiere un id para cargar, pero como ya no hay idvideo la api responde con in notfound
                navigationManager.NavigateTo($"temainfoextra/{TemaQuizDTO.Tema.TemaId}");
            }
            else
            {
                var mensajeError = await responseHttp.GetBody();
                await mostrarMensajes.MostrarMensajeError(mensajeError);
            }
        }
        else
        {
            ArchivoAdjunto = responseHttp.Response;
            FullLoad = true;
        }
    }

    #endregion

    #region ColapsarMenu

    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }

    #endregion

    #region ObtenerEventodelVideo

    public bool MostrarBotonQuiz = false;

    //se pondra una bandera para asegurarnos que la carga del objeto tema esta completa
    private bool FullLoad = false;

    private bool PlayVideo_Start = false;
    public ActividadUsuario Actividad = new ActividadUsuario();
    public TemaFaseDTO TemaFaseDTO = new TemaFaseDTO();

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("Animacion");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("BotonUP");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("Sticky");
            firstRender = false;
            StateHasChanged();
        }

        //PROBLEMA: el objeto tema es nulo en el primer renderizado, por lo tanto no se dibuja nada de html y la funcion js,
        //se ejecuta en el primer render y necesita un id que debe estar en el html el cual aun no existe por eso marca error,
        //al llamar a la funcion

        //SOLUCION1: seria ejecutar el metodo en una renderizacion posterior, pero
        //dispararé múltiples controladores de eventos a medida que se acumulan durante los renderizados.
        //if (!firstRender)
        //{
        //    await JS.InvokeVoidAsync("GetEventVideo");
        //}

        //SOLUCIONFINAL: poner una bandera que indique que el objeto ya no es null ya cargo completo y una vez cargado ahora si ejecutar la funcion js

        if (FullLoad)
        {
            PlayVideo_Start = await JS.PlayVideo();
            FullLoad = false;
            //PlayVideo_Start = await JS.InvokeAsync<bool>("GetEventVideo"); //sin metodo perzonalizado

            //si el video ya fue visto entonces, se crea una actividad que diga que la fase video esta completa
            if (PlayVideo_Start == true)
            {
                //le pasamos un nuevo objeto de tipo actividad, la cual se registrara en la base de datos e indica que esa actividad fue terminada
                Actividad.UserId = UserId;
                Actividad.IsComplete = true;
                Actividad.TemaId = TemaId;
                Actividad.FaseCursoId = 1;

                var httpResponse = await repositorio.Post("api/FaseCurso", Actividad);
                if (httpResponse.Error)
                {
                    await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
                }
                else
                {
                    navigationManager.NavigateTo($"temainfoextra/{TemaId}");
                    await Cargar();
                    await ObtenerFases();
                    StateHasChanged();
                }
            }
        }
    }

    //metodo para obtener el dto que contiene el listado de fases y actividades
    public async Task ObtenerFases()
    {
        var responseHttp = await repositorio.Get<TemaFaseDTO>($"api/FaseCurso/{TemaId}");
        if (!responseHttp.Error)
        {
            TemaFaseDTO = responseHttp.Response;
        }
    }

    #endregion
}
