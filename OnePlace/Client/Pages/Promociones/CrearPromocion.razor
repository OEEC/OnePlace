@page "/crear-promocion"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensaje mostrarMensajes
@attribute [Authorize(Roles = "Administrador")]

@if (MostrarFormulario)
{
   <FormularioPromociones OnValidSubmit="Crear" Promocion="Promocion" Titulo="Crear Promoción" ZonasNoSeleccionadas="ZonasNoSeleccionadas"/>
}
else
{
    <text>Cargando...</text>
}

@code {

    private bool MostrarFormulario { get; set; } = false;
    private Promocion Promocion = new Promocion();
    private List<Zona> ZonasNoSeleccionadas = new List<Zona>();

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<Zona>>("api/Promocion/ListaZonaSencilla");
        ZonasNoSeleccionadas = responseHttp.Response;
        MostrarFormulario = true;
    }

    async Task Crear()
    {
        var httpResponse = await repositorio.Post("api/Promocion", Promocion);
        @if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            await mostrarMensajes.MostrarMensajeExitoso("Promoción Creada");
            navigationManager.NavigateTo("indice-promociones");
        }
    }
}