@page "/inicio"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IMostrarMensaje mostrarMensajes
@inject IJSRuntime JS
@*todas las paginas necesitan este atributo para que no se puedan ver sino estas logueado*@
@attribute [Authorize]
@using System.Security.Claims

@if (user.IsInRole("Usuario"))
{
    <div class="container-landingpage bg-white p-0 text-heebo">

        <!-- Navbar & Hero Start -->
        <div class="container-xxl position-relative p-0">
            <nav class="navbar navbar-expand-lg navbar-light px-4 px-lg-5 py-3 py-lg-0">
                <a href="inicio" class="navbar-brand p-0">
                    <!--<h1 class="m-0"><i class="fa fa-search me-2"></i>SEO<span class="fs-5">Master</span></h1> -->
                    <img src="img/oneplace.png" alt="Logo">
                </a>
                <button class="navbar-toggler" type="button" @onclick="ToggleNavMenu">
                    <span class="fa fa-bars"></span>
                </button>
                <div class="@NavMenuCssClass navbar-collapse" id="navbarCollapse" @onclick="CollapseNavMenu">
                    <div class="navbar-nav ml-auto py-0">
                        @*cambio ocurrido plantilla en boostrap 5 ms-auto blazor boostrap 4 ml-auto*@
                        <a onclick="document.getElementById('inicio').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Inicio</a>
                        <a onclick="document.getElementById('eventos').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Eventos</a>
                        <a onclick="document.getElementById('promociones').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Promociones</a>
                        <a onclick="document.getElementById('cursos').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Cursos</a>
                        @*<a onclick="document.getElementById('cumple').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Cumpleaños</a>*@
                        <a href="capacitacioninfoextra" class="nav-item nav-link">Capacitación</a>
                        <!-- <div class="nav-item dropdown">
                            <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">Otros</a>
                            <div class="dropdown-menu m-0">
                                <a href="team.html" class="dropdown-item">Efemerides</a>
                                <a href="testimonial.html" class="dropdown-item">Historia</a>
                            </div>
                        </div> -->
                        <a onclick="document.getElementById('contacto').scrollIntoView({ behavior: 'smooth' })" class="nav-item nav-link">Contacto</a>
                    </div>
                </div>
                @*se saco del div namenu para poder dar clic al boton de deslogueo sin que se esconda el navmenu*@
                <EnlacesLogin ColorDropDown="btn btn-simsasecondary btn-sm ml-2 dropdown-caret-none" />
            </nav>

            <div class="container-xxl py-5 bg-simsa hero-header mb-5" id="inicio">
                <div class="container my-5 py-5 px-lg-5">
                    <div class="row g-5 py-5">
                        <div class="col-lg-6 text-center text-lg-start">
                            <h1 class="text-white mb-4 animated zoomIn">Gracias por ser parte de la familia Simsa</h1>
                            <p class="text-white pb-3 animated zoomIn">Bienvenido a tu Portal Web</p>
                            <a onclick="document.getElementById('promociones').scrollIntoView({ behavior: 'smooth' })" class="btn btn-light py-sm-3 px-sm-5 rounded-pill me-3 animated slideInLeft font-weight-bold">Ver Más</a>
                            <!--<a href="" class="btn btn-outline-light py-sm-3 px-sm-5 rounded-pill animated slideInRight">Contact Us</a> -->
                        </div>
                        <div class="col-lg-6 text-center text-lg-start">
                            <img class="img-fluid animated flipInX" src="img/oneplace2.png" alt="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Navbar & Hero End -->
        <!--Eventos-->
        <div class="container-xxl py-5" id="eventos">
            <div class="container px-lg-5">
                <div class="row g-5">
                    <div class="col-lg-6 wow fadeInUp" data-wow-delay="0.1s" style="visibility: visible; animation-delay: 0.1s; animation-name: fadeInUp;">
                        <div class="section-title position-relative mb-4 pb-2">
                            <h6 class="position-relative text-primarysimsa pl-4">Información</h6>
                            <h2 class="mt-2">Lo más relevante</h2>
                        </div>
                        <p class="mb-4 colorgris">
                            Mes con mes, encontrarás las fechas y acontecimientos de grupo simsa a través de imágenes y una breve descripción del hecho.
                        </p>
                        <div class="row g-3">
                            <div class="col-sm-6">
                                @foreach (var item in listadeeventos.Take(6))
                                {
                                    <h6 class="mb-3 eventos" @onclick="@(() => OpenModalEvento(item.EventoId))">
                                        <i class="fas fa-calendar text-primarysimsa mr-2"></i>
                                        @item.NombreEvento
                                    </h6>
                                }
                            </div>
                            @if (listadeeventos.Count > 6)
                            {
                                <div class="col-sm-6">
                                    @foreach (var item in listadeeventos.Skip(6))
                                    {
                                        <h6 class="mb-3 eventos" @onclick="@(() => OpenModalEvento(item.EventoId))">
                                            <i class="fas fa-calendar text-primarysimsa mr-2"></i>
                                            @item.NombreEvento
                                        </h6>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <img class="img-fluid wow zoomIn" data-wow-delay="0.5s" src="img/about.jpg" style="visibility: visible; animation-delay: 0.5s; animation-name: zoomIn;">
                    </div>
                </div>
            </div>
        </div>
        <!--Eventos End-->
        <!-- Ofertas Start -->
        @* @if (ListadePromociones != null && ListadePromociones.Count > 0)
    {
    <div class="swiper" id="promociones" style="width: 50%;">
    <div class="swiper-wrapper">
    @foreach (var item in ListadePromociones)
    {
    @foreach (var imagen in item.Imagenes)
    {
    <div class="swiper-slide">
    <a href="promocioninfoextra/@item.PromocionId">
    <img class="rounded-1 img-fluid" src="@imagen.Imagen" alt="" />
    </a>
    </div>
    }
    }
    </div>
    <div class="swiper-nav">
    <div class="swiper-pagination"></div>
    </div>
    </div>
    } *@
        <div class="container-xxl py-5" id="promociones">
            <div class="container px-lg-5">
                <div class="row g-5">
                    <div class="section-title position-relative mb-4 pb-2">
                        <h6 class="position-relative text-primarysimsa pl-4">Promociones</h6>
                    </div>
                    <div class="d-flex flex-nowrap" style="max-width:100%;overflow:auto;">
                        @if (ListadePromociones != null && ListadePromociones.Count > 0)
                        {
                            @foreach (var item in ListadePromociones)
                            {
                                @foreach (var imagen in item.Imagenes)
                                {
                                    <div style="max-width:50%;min-width:50%;max-height:100%;overflow:hidden;">
                                        <a href="promocioninfoextra/@item.PromocionId">
                                            <img class="rounded-1 img-fluid" src="@imagen.Imagen" alt="" />
                                        </a>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- Ofertas End -->
        <!--Cursos-->
        <div class="container-xxl py-5" id="cursos">
            <div class="container px-lg-5">
                <div class="section-title position-relative text-center mb-5 pb-2 wow fadeInUp" data-wow-delay="0.1s">
                    <h6 class="position-relative d-inline text-primarysimsa pl-4">Cursos</h6>
                    <h2 class="mt-2">Lo Que Puedes Aprender</h2>
                </div>
                @if (ListadeCursosUser == null)
                {
                    <LoadingSpinner IsLoading="Procesando" />
                }
                else if (ListadeCursosUser.Count > 1)
                {
                    <div class="row justify-content-center" style="max-width:100%;max-height:600px;resize:both;overflow:auto;">
                        @foreach (var item in ListadeCursosUser)
                        {
                            <div style="min-width:33%;max-width:33%;">
                                <div class="service-item d-flex flex-column justify-content-center text-center rounded">
                                    <div class="service-icon flex-shrink-0">
                                        <i class="fas fa-chalkboard-teacher fa-2x"></i>
                                    </div>
                                    <h5 class="mb-3">@item.Nombre</h5>
                                    <p class="colorgris">
                                        @item.DescripcionCortada
                                    </p>
                                    <a class="btn px-3 mt-auto mx-auto font-weight-bold" href="cursoinfoextra/@item.CursoId">CapaSimsate!</a>
                                </div>
                            </div>
                        }
                    </div>
                    @* <div class="owl-carousel curso-carousel wow zoomIn" data-wow-delay="0.1s">
            @foreach (var item in ListadeCursosUser)
            {
            //si la fecha de hoy es mayor a la fecha final , el curso ha vencido no mostrar nada, sino, mostrar el curso
            if (FechadeHoy >= item.FechaFinal)
            {

            }
            else
            {
            <div class="item">
            <div class="service-item d-flex flex-column justify-content-center text-center rounded">
            <div class="service-icon flex-shrink-0">
            <i class="fas fa-chalkboard-teacher fa-2x"></i>
            </div>
            <h5 class="mb-3">@item.Nombre</h5>
            <p class="colorgris">
            @item.DescripcionCortada
            </p>
            <a class="btn px-3 mt-auto mx-auto font-weight-bold" href="cursoinfoextra/@item.CursoId">CapaSimsate!</a>
            </div>
            </div>
            }
            }
            </div> *@
                }
                else
                {
                    @foreach (var item in ListadeCursosUser)
                    {
                        <div class="item">
                            <div class="service-item d-flex flex-column justify-content-center text-center rounded">
                                <div class="service-icon flex-shrink-0">
                                    <i class="fas fa-chalkboard-teacher fa-2x"></i>
                                </div>
                                <h5 class="mb-3">@item.Nombre</h5>
                                <p class="colorgris">
                                    @item.DescripcionCortada
                                </p>
                                <a class="btn px-3 mt-auto mx-auto font-weight-bold" href="cursoinfoextra/@item.CursoId">CapaSimsate!</a>
                            </div>
                        </div>
                        //si la fecha de hoy es mayor a la fecha final , el curso ha vencido no mostrar nada, sino, mostrar el curso
                        @* if (FechadeHoy >= item.FechaFinal)
            {

            }
            else
            {
            <div class="item">
            <div class="service-item d-flex flex-column justify-content-center text-center rounded">
            <div class="service-icon flex-shrink-0">
            <i class="fas fa-chalkboard-teacher fa-2x"></i>
            </div>
            <h5 class="mb-3">@item.Nombre</h5>
            <p class="colorgris">
            @item.DescripcionCortada
            </p>
            <a class="btn px-3 mt-auto mx-auto font-weight-bold" href="cursoinfoextra/@item.CursoId">CapaSimsate!</a>
            </div>
            </div>
            } *@
                    }
                }
            </div>
        </div>
        <!-- Cursos End -->
        <!--Logos Start -->
        <div class="container-xxl bg-simsa testimonial py-5 my-5 wow fadeInUp" data-wow-delay="0.1s">
            <div class="container py-5 px-lg-5">
                <div class="owl-carousel testimonial-carousel">
                    <div class="testimonial-item bg-transparent rounded text-white p-4">
                        <img class="img-fluid" src="img/logo_simsa.png">
                    </div>
                    <div class="testimonial-item bg-transparent rounded text-white p-4">
                        <img class="img-fluid" src="img/logo_pricegas_chico.png">
                    </div>
                    <div class="testimonial-item bg-transparent rounded text-white p-4">
                        <img class="img-fluid" src="img/onestop.png">
                    </div>
                    <div class="testimonial-item bg-transparent rounded text-white p-4">
                        <img class="img-fluid" src="img/shell.png">
                    </div>
                    <div class="testimonial-item bg-transparent rounded text-white p-4">
                        <img class="img-fluid" src="img/Lmigasolina.png">
                    </div>
                </div>
            </div>
        </div>
        <!--Logos End -->
        <!-- Cumple Start -->
        @*<div class="container-xxl py-5" id="cumple">
    <div class="container px-lg-5">
    <div class="section-title position-relative text-center mb-5 pb-2 wow fadeInUp" data-wow-delay="0.1s">
    <h6 class="position-relative d-inline text-primarysimsa pl-4">Cumpleaños</h6>
    <h2 class="mt-2">¡Gracias por todo, disfruta muchísimo que lo mereces!</h2>
    @if (FechadeHoy.ToString("dd/MM/yyyy") == FechaDespuesdeCumple.ToString("dd/MM/yyyy"))
    {
    ,<!-- si la variable yasedescargotarjeta es diferente de null y ademas ya es true quiere decir que ya se descargo por lo tanto no mostramos nada -->
    @if (YaseDescargoTarjeta != null && YaseDescargoTarjeta.TarjetaDescargada == true)
    {

    }
    else
    {
    /*si la fecha de hoy es mayor o igual a la fecha de cumple del usuario mas 7 dias,
    el boton de descargar tarjeta desaparece, sino aparece el boton de descarga*/
    @if (FechadeHoy > UltimoDiaParaDescargarCupon)
    {

    }
    else
    {
    <span class="text-primarysimsa">Tarjeta de Regalo Descargable</span>
    <button class="btn btn-squarealineado text-primarysimsa bg-white my-1 manita" data-bs-toggle="tooltip" data-bs-placement="top" title="Descargar" @onclick="@(()=>DownloadArchivo(EmpleadoPersonaDTO.Empleado.Idempleado,TipoReporte.TarjetadeCumple))">
    <i class="fas fa-gift"></i>
    </button>
    }
    }
    }
    </div>
    <div class="owl-carousel cumple-carousel wow fadeInUp" data-wow-delay="0.1s">
    @if (ListadodeCumpleñerosUser != null)
    {
    @foreach (var item in ListadodeCumpleñerosUser)
    {
    <div class="item">
    <div class="team-item">
    <div class="d-flex">
    <div class="flex-shrink-0 d-flex flex-column align-items-center mt-4 pt-5" style="width: 75px;">
    <span class="btn btn-square text-primarysimsa bg-white my-1"><i class="fas fa-birthday-cake"></i></span>
    </div>
    @if (item.Empleado.ImagenesCumple != null && item.Empleado.ImagenesCumple.Count > 0)
    {
    @foreach (var item2 in item.Empleado.ImagenesCumple)
    {
    <img class="img-fluidsimsa rounded w-100" src="@item2.Imagen" alt="">
    }
    }
    else
    {
    <img class="img-fluidsimsa rounded w-100" src="@item.Empleado.Img" alt="">
    }
    </div>
    <div class="px-4 py-3">
    <h5 class="fw-bold m-0">@item.Empleado.Persona.Nombre</h5>
    <span class="colorgris">
    @if (item.Empleado.Puesto != null)
    {
    @(item.Empleado.Puesto.Puesto1+" "+"/");
    }
    @item.Empleado.Persona.Fchnac?.ToString("MMMM dd")
    </span>
    </div>
    </div>
    </div>
    }
    }
    </div>
    </div>
    </div>*@
        <!-- Cumple End -->
        <!-- Footer Start -->
        <div class="container-fluid bg-simsa text-dark footer mt-5 pt-5  colornegro wow fadeIn" data-wow-delay="0.1s" id="contacto">
            <div class="container py-5 px-lg-5">
                <div class="row g-5">
                    <div class="col-md-6 col-lg-6">
                        <h5 class="text-white mb-4">Buzón</h5>
                        <div class="position-relative w-100 mt-3">
                            <form>
                                <div class="form-group">
                                    <label for="exampleInputEmail1">Mensaje:</label>
                                    <textarea type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp"></textarea>
                                </div><br>
                                <div class="form-group">
                                    <div class="file-select" id="src-file1">
                                        <input type="file" name="src-file1" aria-label="Archivo">
                                    </div>
                                </div>
                                <br>
                                <button type="submit" class="btn btn-light font-weight-bold">
                                    <i class="fa fa-paper-plane text-primarysimsa"></i>
                                    Enviar
                                </button>
                            </form>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <h5 class="text-white mb-4">Historia</h5>
                        <p style="text-align:justify">
                            Grupo SIMSA fué fundada en 1967 formada por un grupo de empresas Laguneras orientadas a la producción y distribución de bienes y servicios en diferentes divisiones tales como Transporte, Energéticos, Construcción, Entre otros.
                            Grupo SIMSA es un enlace de empresas triunfadoras, que basado en su capital humano y la excelencia en el servicio, enfrenta el reto de la intensa competitividad con el nuevo milenio.
                        </p>
                        <div class="row g-2">
                            <div class="col-4"></div>
                            @*<div class="col-4"></div>*@
                            <div class="col-8">
                                <img class="img-fluid" src="img/gruposimsa.png" alt="Image" style="border-radius: 15px;
                                box-shadow: 0 0 10px rgb(0 0 0 / 70%);">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container px-lg-5">
                <div class="copyright">
                    <div class="row">
                        <div class="col-md-6 col-lg-5">
                            <p>
                                <i class="fa fa-map-marker-alt mr-3 text-white"></i>C. Juan F. Brittingham, Cd Industrial, Torreón, Coah.
                            </p>
                            <p><i class="fa fa-phone-alt mr-3 text-white"></i>871 750 7171</p>
                            <p><i class="fa fa-envelope mr-3 text-white"></i>contacto@simsa.com</p>
                        </div>
                        <div class="col-md-3 text-center text-md-start mb-3 mb-md-0">
                            &copy; <span class="border-bottom">One Place</span>, All Right Reserved.<br />
                            Designed By <span class="border-bottom">Innovación</span>
                            <br>Distributed By: <span class="border-bottom">Simsa</span>
                        </div>
                        <div class="col-md-3 text-center text-md-end">
                            <div class="d-flex pt-2">
                                <a class="btn btn-outline-light btn-social" href="https://twitter.com/grupo_simsa" target="_blank"><i class="fab fa-twitter"></i></a>
                                <a class="btn btn-outline-light btn-social" href="https://es-la.facebook.com/GrupoSimsaMexico/" target="_blank"><i class="fab fa-facebook-f"></i></a>
                                <a class="btn btn-outline-light btn-social" href="https://www.instagram.com/migasolina/?hl=es" target="_blank"><i class="fab fa-instagram"></i></a>
                                <a class="btn btn-outline-light btn-social" href="https://www.linkedin.com/company/grupo-simsa-s-a-de-c-v-/" target="_blank"><i class="fab fa-linkedin-in"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End -->
        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-lg-square btn-dark back-to-top pt-2"><i class="fas fa-long-arrow-alt-up"></i></a>
    </div>

    @if (isModal)
    {
        <div class="modal show" id="authentication-modal" tabindex="-1" role="dialog" aria-labelledby="authentication-modal-label" aria-modal="true" style="display:block; padding-left: 0px;">
            <div class="modal-dialog" role="document">
                <div class="modal-content" style="background-color: rgba(10,10,10,.8); border: none;">
                    <div class="modal-header border-0">
                        <button type="button" class="btn bg-simsa" data-bs-dismiss="modal" aria-label="Close"
                                style="margin: -0.5rem -0.5rem -0.5rem auto;" @onclick="closeModal">
                            <span class="fas fa-times" aria-hidden="true"></span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <div class="row light">
                            <div class="col-sm-6 col-lg-3 mb-3"></div>
                            <div class="col-sm-6 col-lg-6 mb-3">
                                <div class="card overflow-hidden">
                                    <div class="card-img-top">
                                        <img src="img/cumplecake.jpg" alt="Card image cap" style="width: 100%; height:250px; display: block" />
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">
                                            Feliz Cumpleaños:
                                            @if (EmpleadoPersonaDTO != null)
                                            {
                                                @(EmpleadoPersonaDTO.Persona.Nombre + " " + EmpleadoPersonaDTO.Persona.ApePat)
                                            }
                                            !!
                                        </h5>
                                        <p class="card-text text-dark" style="text-align:justify">
                                            “Trabajar contigo es un aprendizaje constante. Gracias por darnos tu apoyo y esfuerzo. Esta empresa no sería la misma sin ti. ¡Feliz cumpleaños!”
                                        </p>
                                        <p class="card-text"><small class="text-muted">@FechadeHoy.ToString("dddd, dd MMMM yyyy")</small></p>
                                    </div>
                                    <div class="card-footer bg-light d-flex justify-content-between">
                                        <p class="card-text">
                                            <small class="text-muted">
                                                ¡Por que te lo merecres!<br>
                                                Grupo Simsa te regala un dona y un café de nuestras tiendas One.<br>
                                                Escanea tu código QR, presentalo en una tienda participante y listo a disfrutar!!.<br>
                                                Válido solo una vez.
                                            </small><br />
                                            @if (YaseDescargoTarjeta != null && YaseDescargoTarjeta.TarjetaDescargada == true)
                                            {

                                            }
                                            else
                                            {
                                                <BotonIcono Class="btn p-0 ms-2" ButtonType="ButtonType.Button" data-bs-toggle="tooltip" data-bs-placement="top" title="Descargar" Icon="text-500 fas fa-download" @onclick="@(()=>DownloadArchivo(EmpleadoPersonaDTO.Empleado.Idempleado,TipoReporte.TarjetadeCumple))" />
                                            }
                                        </p>
                                        <img src="@EmpleadoPersonaDTO.CodigoQR" class="text-left" style="width:80px; height:80px;" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-lg-3 mb-3"></div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }

    @if (isModalEvento)
    {
        <div class="modal show" id="authentication-modal" tabindex="-1" role="dialog" aria-labelledby="authentication-modal-label" aria-modal="true" style="display:block; padding-left: 0px;">
            <div class="modal-dialog" role="document">
                <div class="modal-content" style="background-color: rgba(10,10,10,.8); border:none;">
                    <div class="modal-header border-0">
                        <button type="button" class="btn bg-simsa" data-bs-dismiss="modal" aria-label="Close"
                                style="margin: -0.5rem -0.5rem -0.5rem auto;" @onclick="closeModalEvento">
                            <span class="fas fa-times" aria-hidden="true"></span>
                        </button>
                    </div>
                    <div class="modal-body">

                        <div class="row light">
                            <div class="col-sm-6 col-lg-3 mb-3"></div>

                            <div class="col-sm-6 col-lg-6 mb-3">
                                <div class="card overflow-hidden">
                                    <div class="card-img-top">
                                        <img src="@ImgModalEvento" alt="Card image cap" style="width: 100%; height:250px; display: block" />
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">@TituloModalEvento</h5>
                                        <p class="card-text" style="text-align:justify">
                                            @DescripcionModalEvento<br />
                                            @if (!string.IsNullOrEmpty(TituloEventoExtra))
                                            {
                                                <a class="btn btn-sm btn-warning" href="eventoinfoextra/@IdModalEvento">
                                                    <i class="fa fa-info" aria-hidden="true"></i>
                                                    Leer Más
                                                </a>
                                            }
                                        </p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-6 col-lg-3 mb-3"></div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }

    <style>
        .swiper {
            width: 100%;
            height: auto;
        }

            .swiper img {
                width: 100%;
                display: block;
            }
    </style>
}
else
{
    @* <Card Class="card mb-3 mb-lg-0">
        <CardHeader Class="card-header bg-light d-flex justify-content-between">
            <Texto Typo="Typo.h5" Class="mb-0">Cumpleaños del Mes</Texto>
        </CardHeader>
        <CardBody Class="card-body fs--1">
            <div class="row">
                <ListadoGenerico Listado="ListadodeCumpleñerosAdmin">
                    <HayRegistrosCompleto>
                        @foreach (var item in ListadodeCumpleñerosAdmin)
                        {
                            <div class="col-md-6 h-100">
                                <div class="d-flex btn-reveal-trigger">
                                    <div class="calendar">
                                        <Texto Typo="Typo.normal" Class="calendar-month">@item.Empleado.Persona.Fchnac?.ToString("MMM")</Texto>
                                        <Texto Typo="Typo.normal" Class="calendar-day">@item.Empleado.Persona.Fchnac?.ToString("dd")</Texto>
                                    </div>
                                    <div class="flex-1 position-relative ps-3">
                                        <Texto Typo="Typo.h6" Class="fs-0 mb-0"><Texto Typo="Typo.normal" Class="text-primary">@item.Empleado.Persona.Nombre</Texto></Texto>
                                        <Texto Typo="Typo.body2" Class="mb-1 text-700">
                                            <Texto Typo="Typo.small">
                                                @if (item.Empleado.Area != null)
                                                {
                                                    @item.Empleado.Area.Area1;
                                                }
                                                <br/>
                                                @if (item.Empleado.Zona != null)
                                                {
                                                    @item.Empleado.Zona.Zona1.ToUpper();
                                                }
                                            </Texto>
                                        </Texto>
                                        <Texto Typo="Typo.body2" Class="mb-1 text-700">
                                            <Texto Typo="Typo.small">
                                                @if (item.Empleado.Puesto != null)
                                                {
                                                    @item.Empleado.Puesto.Puesto1
                                                }
                                            </Texto>
                                        </Texto>
                                        <Texto Typo="Typo.body2" Class="text-1000 mb-0"><Texto Typo="Typo.small">Fecha de nacimiento: @item.Empleado.Persona.Fchnac?.ToString("MM/dd/yyyy")</Texto></Texto>
                                        <div class="border-dashed-bottom my-3"></div>
                                    </div>
                                </div>
                            </div>
                        }
                    </HayRegistrosCompleto>
                </ListadoGenerico>
            </div>
        </CardBody>
        <CardFooter Class="card-footer border-top d-flex justify-content-center bg-transparent">
            <Paginacion PaginaActual="paginaActualListadeCumple" PaginaSeleccionada="paginaSeleccionadaListaCumple" PaginasTotales="paginasTotalesListaCumple" />
        </CardFooter>
    </Card>
    <br /> *@
    <Card Class="card mb-3">
        <CardHeader Class="card-header">
            <div class="row justify-content-between">
                <div class="col-md-auto">
                    <Texto Typo="Typo.h5" Class="mb-3 mb-md-0">Cursos</Texto>
                </div>
                <div class="col-md-auto">
                    @*<Enlace Class="btn btn-sm btn-outline-secondary border-300 mr-2" Href="lista-producto">
                <Icono Icon="fas fa-chevron-left mr-1" data-fa-transform="shrink-4"></Icono>Seguir comprando
                </Enlace>*@
                    @*<Enlace Class="btn btn-sm btn-primary" Href="checkout">Ver Compra</Enlace>*@
                    <Boton Class="btn btn-primary btn-sm" @onclick="verModalQR">
                        <Icono Icon="fas fa-qrcode"></Icono>
                        Generar Código
                    </Boton>
                </div>
            </div>
        </CardHeader>
        <CardBody Class="card-body p-0">
            <div class="row bg-200 text-900 no-gutters px-1 fs--1 font-weight-semi-bold">
                <div class="col-9 col-md-8 p-2 px-md-3"></div>
                <div class="col-3 col-md-4 px-3">
                    <div class="row">
                        @*<div class="col-12 col-md-4 text-right p-2 px-md-3">Descripción</div>
                    <div class="col-12 col-md-4 text-right p-2 px-md-3">Precio</div>
                    <div class="col-12 col-md-4 text-right p-2 px-md-3">Total</div>*@
                    </div>
                </div>
            </div>
            @if (ListadeCursosAdmin == null)
            {
                <LoadingSpinner IsLoading="Procesando" />
            }
            else
            {
                @foreach (var item in ListadeCursosAdmin)
                {
                    <div class="row no-gutters align-items-center px-1 border-bottom border-200">
                        <div class="col-8 py-3 px-2 px-md-3">
                            <div class="media align-items-center">
                                <Enlace><Imagen Class="rounded mr-3 d-none d-md-block" Src="@item.Imagen" alt="" width="60" /></Enlace>
                                <div class="media-body">
                                    <Texto Typo="Typo.h5" Class="fs-0">
                                        <Enlace Class="text-900" Href="@("detalles-curso/"+item.CursoId)">@item.Nombre</Enlace>
                                    </Texto>
                                    <div class="fs--2 fs-md--1 text-600">
                                        @item.Descripcion
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-4 p-3">
                            <div class="row">
                                @*<div class="col-md-4 text-right pl-0 pr-2 pr-md-3 order-0 order-md-1 mb-2 mb-md-0 text-600">19</div>
                    <div class="col-md-4 text-right pl-0 pr-2 pr-md-3 order-0 order-md-1 mb-2 mb-md-0 text-600">16</div>
                    <div class="col-md-4 text-right pl-0 pr-2 pr-md-3 order-0 order-md-1 mb-2 mb-md-0 text-600">15</div>*@
                            </div>
                        </div>
                    </div>
                }
                @*<div class="row font-weight-bold px-1">
        <div class="col-9 col-md-8 py-2 py-0 px-md-3 text-right text-900">

        </div>
        <div class="col px-3">
        <div class="row no-gutters">
        <div class="col-md-8 py-2 d-none d-md-block text-center">Total a Pagar</div>
        <div class="col-12 col-md-4 text-right py-2 pr-md-3 pl-0">
        15
        <div class="text-400 font-weight-normal fs--2">Incluye IVA</div>
        </div>
        </div>
        </div>
        </div>*@
            }
        </CardBody>
        <CardFooter Class="card-footer border-top d-flex justify-content-center bg-transparent">
            <Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada" PaginasTotales="paginasTotales" />
        </CardFooter>
    </Card>
    <br />
    <br />

    <ModalContent EsVisible="VerModalQR" BotonesModal="ModalContent.TiposdeBoton.Cancelar" OnClose="closeModalQR" Titulo="Código QR">
        <Imagen Class="img-thumbnail3" Src="@("api/Codigo/")"></Imagen>
    </ModalContent>
}

@code {

    ClaimsPrincipal user;
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    [CascadingParameter] public App MyApp { get; set; }

    public EmpleadoPersonaDTO EmpleadoPersonaDTO { get; set; }
    public List<EmpleadoPersonaDTO> ListadodeCumpleñerosAdmin { get; set; }
    public List<EmpleadoPersonaDTO> ListadodeCumpleñerosUser { get; set; }
    public DateTime FechadeHoy;
    public DateTime UltimoDiaParaDescargarCupon;
    public DateTime FechaDespuesdeCumple;

    public int IdModalEvento { get; set; }
    public string ImgModalEvento { get; set; }
    public string TituloModalEvento { get; set; }
    public string DescripcionModalEvento { get; set; }
    public string TituloEventoExtra { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        user = authState.User;

        FechadeHoy = DateTime.Today;

        @if (user.IsInRole("Usuario"))
        {
            //cambiar el diseño dependiendo del rol del usuario logueado
            MyApp.SetLayout(typeof(UserLayout));

            await JS.InvokeVoidAsync("loadCss", "css/Landingpagestyle.css");
            StateHasChanged();

            //antes de cargar el metodo cargar cumple obtenemos la variable que viene del localstorage
            await ReadFlag();

            await CargarEstadoCumple();
            await CargarCumple();
            await CargarEventos();
            await CargarCursosUser();
        }
        else
        {
            MyApp.SetLayout(typeof(MainLayout));
            await CargarCursosAdmin();
        }

        // await CargarListadodeCumpleañeros();
        await CargarCarrusel();
    }

    #region Cumpleaños

    private async Task CargarCumple()
    {
        var responseHttp = await repositorio.Get<EmpleadoPersonaDTO>("api/Birthday");
        if (!responseHttp.Error)
        {
            EmpleadoPersonaDTO = responseHttp.Response;

            //esta fecha es para comenzar la fecha del UltimoDiaParaDescargarCupon y asi poner el boton de descarga por si no descargaron el dia de su cumple la tarjeta
            FechaDespuesdeCumple = EmpleadoPersonaDTO.ProximoCumple.AddDays(1);

            //al dia de cumple le sumamos 7 dias para que tenga una semana para poder decargar su tajeta y canjear el cupon
            UltimoDiaParaDescargarCupon = EmpleadoPersonaDTO.ProximoCumple.AddDays(5);

            //si la fecha de cumple es igual a la fecha de hoy ismodal es true abre modal
            if (Flag == "true" && EmpleadoPersonaDTO.ProximoCumple.ToString("dd/MM/yyyy") == FechadeHoy.ToString("dd/MM/yyyy"))
            {
                isModal = true;
            }
        }
    }

    private int paginaActualListadeCumple = 1;
    private int paginasTotalesListaCumple;

    private async Task paginaSeleccionadaListaCumple(int pagina)
    {
        //la pagina actual va hacer igual a la pagina que me envie el componete
        paginaActualListadeCumple = pagina;
        await CargarListadodeCumpleañeros(pagina);
    }

    private async Task CargarListadodeCumpleañeros(int pagina = 1)
    {
        var httpResponse = await repositorio.Get<PaginadorGenerico<EmpleadoPersonaDTO>>($"api/Birthday/listadecumpleaneros?pagina={pagina}");
        if (!httpResponse.Error)
        {
            var resultado = httpResponse.Response.Resultado;
            var resultadoexport = httpResponse.Response.ResultadoAExportar;

            paginaActualListadeCumple = httpResponse.Response.PaginaActual;
            paginasTotalesListaCumple = httpResponse.Response.TotalPaginas;

            ListadodeCumpleñerosAdmin = (List<EmpleadoPersonaDTO>)resultado;
            ListadodeCumpleñerosUser = (List<EmpleadoPersonaDTO>)resultadoexport;
        }
    }

    #endregion

    #region Eventos

    List<Evento> listadeeventos = new List<Evento>();

    private async Task CargarEventos()
    {
        var responseHttp = await repositorio.Get<List<Evento>>("api/Evento/ListadeEventosSencilla");
        if (!responseHttp.Error)
        {
            listadeeventos = responseHttp.Response;
        }
    }

    #endregion

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CargarListadodeCumpleañeros();
            await CargarCarrusel();
            await CargarCursosUser();

            await JS.InvokeVoidAsync("Animacion");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("StarCarousel");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("StarCarousel2");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("StarCarousel3");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("StarCarousel4");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("BotonUP");
            firstRender = false;
            StateHasChanged();

            await JS.InvokeVoidAsync("Sticky");
            firstRender = false;
            StateHasChanged();
        }
    }

    #region ColapsarMenu

    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }

    #endregion

    #region ModalCumple
    private Boolean isModal = false;

    private async Task closeModal()
    {
        this.isModal = false;
        //al cerrar el modal borramos la variable showmodal del localstorage
        await DeleteFlag();
        StateHasChanged();
    }

    #region MostrarSoloUnaVezModal

    public string Flag;

    public async Task ReadFlag()
    {
        //Flag = await JS.InvokeAsync<string>("localStorage.getItem", "ShowModal"); //sin metodo perzonalizado
        Flag = await JS.GetFromLocalStorage("ShowModal");
    }

    public async Task DeleteFlag()
    {
        //await JS.InvokeAsync<string>("localStorage.removeItem", "ShowModal"); //sin metodo perzonalizado
        await JS.RemoveItem("ShowModal");
    }

    #endregion

    #endregion

    #region ModalEvento
    private Boolean isModalEvento = false;

    private void OpenModalEvento(int Id)
    {
        foreach (var item in listadeeventos.Where(x => x.EventoId == Id))
        {
            IdModalEvento = item.EventoId;
            ImgModalEvento = item.ImgEvento;
            TituloModalEvento = item.TituloEvento;
            DescripcionModalEvento = item.DescripcionEvento;
            TituloEventoExtra = item.TituloEventoExtra;
        }

        this.isModalEvento = true;
    }

    private void closeModalEvento()
    {
        this.isModalEvento = false;
        StateHasChanged();
    }

    #endregion

    #region CargarCarrusel

    public List<Promocion> ListadePromociones { get; set; }

    private async Task CargarCarrusel()
    {
        var responseHttp = await repositorio.Get<List<Promocion>>($"api/Promocion/ListaPromocionSencilla");
        if (!responseHttp.Error)
        {
            ListadePromociones = responseHttp.Response;
        }
    }

    #endregion

    #region Tarjeta

    public EstadodeCumpleaños SendEstadoCumple = new EstadodeCumpleaños();

    public EstadodeCumpleaños YaseDescargoTarjeta { get; set; }

    public byte[] PdfResultado { get; set; }

    public async Task DownloadArchivo(int Id, TipoReporte tipoReporte)
    {
        var responseHttp = await repositorio.Get<byte[]>($"api/Ticket/iframe/{Id}/{tipoReporte}/{0}");
        PdfResultado = responseHttp.Response;

        await JS.InvokeVoidAsync("saveAsFile", "tarjetadecumpleaños.pdf", PdfResultado);

        //una vez descargada la tarjeta se ejecuta este metodo
        await EnviarEstadoCumple();
    }

    //este metodo guardara el estado de la tarjeta en este caso un bool de que ya se descargo en true, para ya no mostrar el boton de descargar
    public async Task EnviarEstadoCumple()
    {
        SendEstadoCumple.TarjetaDescargada = true;

        var httpResponse = await repositorio.Post("api/Birthday", SendEstadoCumple);
        @if (httpResponse.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            await CargarEstadoCumple();
            StateHasChanged();
        }
    }

    //verificamos si la tarjeta ya fue descargada
    private async Task CargarEstadoCumple()
    {
        var responseHttp = await repositorio.Get<EstadodeCumpleaños>("api/Birthday/EstadoCumple");
        if (!responseHttp.Error)
        {
            YaseDescargoTarjeta = responseHttp.Response;
        }
    }

    #endregion Tarjeta

    #region Cursos

    private bool Procesando = true;
    public List<Curso> ListadeCursosAdmin { get; set; }
    public List<Curso> ListadeCursosUser { get; set; }

    private int paginaActual = 1;
    private int paginasTotales;

    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await CargarCursosAdmin(pagina);
    }

    private async Task CargarCursosAdmin(int pagina = 1)
    {
        var responseHttp = await repositorio.Get<List<Curso>>($"api/Curso/listadecursosadmin?pagina={pagina}");
        if (!responseHttp.Error)
        {
            ListadeCursosAdmin = responseHttp.Response;
            Procesando = false;

            var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();
            paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
        }
    }

    private async Task CargarCursosUser()
    {
        var responseHttp = await repositorio.Get<List<Curso>>($"api/Curso/listadecursosuser");
        if (!responseHttp.Error)
        {
            ListadeCursosUser = responseHttp.Response;
            Procesando = false;
        }
    }

    #endregion

    #region GenerarCodigoQR

    //public QRcodigo QRCodigo = new QRcodigo();
    //string Resultado { get; set; } = "";
    //private async Task GenerarQR()
    //{
    //    QRCodigo.Codigo = "https://innovacion2.dgl.com.mx/oneplace";
    //    var responseHttp = await repositorio.Post<QRcodigo, string>($"api/Codigo", QRCodigo);
    //    Resultado = responseHttp.Response;
    //}

    public bool VerModalQR = false;

    public async Task verModalQR()
    {
        VerModalQR = true;
        await JS.InvokeVoidAsync("downloadFromUrl", new { Url = $"api/Codigo", FileName = "codigoqr.jpeg" });
    }

    private void closeModalQR()
    {
        VerModalQR = false;
    }

    #endregion
}
