@page "/indice-empleados"
@using OnePlace.Shared.Entidades.SimsaCore
@inject IRepositorio repositorio
@inject NavigationManager Navigation
@attribute [Authorize(Roles = "Administrador")]

<h3>Empleados</h3>

@if (empleados == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Correo</th>
                <th>No Empleado</th>
                <th>Id Persona</th>
                <th>Fecha</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in empleados)
            {
                <tr>
                    <td>@item.Idempleado</td>
                    <td>@item.Correo</td>
                    <td>@item.Noemp</td>
                    <td>@item.Idpersona</td>
                    <td>
                        @if (item.Fchalta != null)
                        {
                            @item.Fchalta.Value.ToString("MM/dd/yyyy h:mm tt")
                        }
                        else
                        {
                            <span>no hay fecha</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-info">
                            Editar
                        </button>
                        <button class="btn btn-danger">
                            Borrar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @*<button class="btn btn-success" @onclick="Create">Añadir Empleado</button>*@
    </div>
}

@code {

    private List<Empleado> empleados;

    protected async override Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task Cargar()
    {
        var responseHttp = await repositorio.Get<List<Empleado>>("api/Empleado");
        empleados = responseHttp.Response;
    }

    //private async Task Delete(int id)
    //{
    //    await Http.DeleteAsync($"api/Employee/{id}");
    //    empleados = await Http.GetFromJsonAsync<List<Employee>>("api/Employee");
    //    StateHasChanged();
    //}

    //private void Edit(int id)
    //{
    //    Navigation.NavigateTo($"indice-empleados/edit/{id}");
    //}
    //private void Create()
    //{
    //    Navigation.NavigateTo("indice-empleados/create");
    //}
}
