@page "/editar-evento/{EventoId:int}"
@inject IRepositorio repositorio
@inject IMostrarMensaje mostrarMensaje
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Administrador")]

@if (Evento == null)
{
    <text>Cargando...</text>
}
else
{
    <FormularioEvento Evento="Evento" OnValidSubmit="Editar" Es_EditarEvento="true" Titulo="Editar Evento" />
}

@code {
    [Parameter] public int EventoId { get; set; }
    Evento Evento;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Evento>($"api/Evento/{EventoId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("indice-eventos");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Evento = httpResponse.Response;
        }
    }

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/Evento", Evento);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("indice-eventos");
        }
    }
}
